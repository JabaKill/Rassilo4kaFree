import asyncio
from telethon import TelegramClient
from flask import Flask, jsonify
from threading import Thread

# –î–∞–Ω–Ω—ã–µ –∏–∑ my.telegram.org
api_id = 24209149
api_hash = "357ffa520f5bc72970a54ee00d883cf8"
phone_number = "+380684401813"

# –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
chat_usernames = [
    # ... (—Ç–≤–æ–π —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤)
]

# –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
message_text = """üö®–í–ù–ò–ú–ê–ù–ò–ïüö®
–ó–∞–ª–∏–≤–∞–µ–º üî•–¢–û–ü–û–í–´–ô –¢–†–ê–§–ò–öüî•
# ... (—Ç–≤–æ–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è)
"""

app = Flask(__name__)

@app.route('/')
def index():
    return "–°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!"

async def send_messages():
    async with TelegramClient("session_name", api_id, api_hash) as client:
        await client.start(phone_number)
        print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞—á–∏–Ω–∞—é –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π...")
        while True:
            for chat in chat_usernames:
                try:
                    await client.send_message(chat, message_text)
                    print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {chat}")
                    await asyncio.sleep(5)
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ {chat}: {e}")
            print("‚è≥ –ñ–¥—É 5 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π...")
            await asyncio.sleep(300)

def run_asyncio_loop(loop):
    asyncio.set_event_loop(loop)
    loop.run_until_complete(send_messages())

if __name__ == "__main__":
    loop = asyncio.new_event_loop()
    t = Thread(target=run_asyncio_loop, args=(loop,))
    t.start()
    app.run(debug=True, use_reloader=False)  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ reloader –≤—ã–∫–ª—é—á–µ–Ω
